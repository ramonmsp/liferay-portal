<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<liferay-portlet:actionURL name="/cp_content_web/check_cp_instance" portletName="com_liferay_commerce_product_content_web_internal_portlet_CPContentPortlet" var="checkCPInstanceURL">
	<portlet:param name="cpDefinitionId" value="<%= String.valueOf(cpDefinitionId) %>" />
	<portlet:param name="groupId" value="<%= String.valueOf(themeDisplay.getScopeGroupId()) %>" />
</liferay-portlet:actionURL>

<aui:script require="commerce-frontend-js/utilities/eventsDefinitions as eventsDefinitions, commerce-frontend-js/utilities/forms/DDMFormHandler as DDMFormHandler">
	var cpDefinitionId = <%= cpDefinitionId %>;
	var CP_CONTENT_WEB_PORTLET_KEY =
		'com_liferay_commerce_product_content_web_internal_portlet_CPContentPortlet';

	function updateGallery(formFields) {
		var formData = new FormData();
		formData.append(
			'<portlet:namespace />ddmFormValues',
			JSON.stringify(formFields)
		);
		formData.append('groupId', themeDisplay.getScopeGroupId());

		fetch(
			'<%= String.valueOf(cpContentHelper.getViewAttachmentURL(liferayPortletRequest, liferayPortletResponse)) %>',
			{
				body: formData,
				credentials: 'include',
				headers: new Headers({'x-csrf-token': Liferay.authToken}),
				method: 'post',
			}
		)
			.then((response) => {
				return response.json();
			})
			.then((response) => {
				var images = response.map((image) => {
					return {
						thumbnailUrl: image.url,
						url: image.url,
						title: '',
					};
				});
				Liferay.fire(eventsDefinitions.PRODUCT_OPTIONS_CHANGED, {
					images: images,
				});
			});
	}

	function fillField(fieldElement) {
		if (fieldElement.jsonData && fieldElement instanceof HTMLElement) {
			const textElement = fieldElement.querySelector('span:nth-child(2)');

			if (textElement) {
				textElement.innerText = Liferay.Util.escape(fieldElement.jsonData);

				fieldElement.classList.remove('hide');
			}
		}
	}

	function updateProductFields(productData) {
		var availabilityEstimateContainer = document.querySelector(
			'[data-text-cp-instance-availability-estimate]'
		);
		var gtinContainer = document.querySelector('[data-text-cp-instance-gtin]');
		var mpnContainer = document.querySelector(
			'[data-text-cp-instance-manufacturer-part-number]'
		);
		var skuContainer = document.querySelector('[data-text-cp-instance-sku]');
		var stockQuantityContainer = document.querySelector(
			'[data-text-cp-instance-stock-quantity]'
		);

		availabilityEstimateContainer.jsonData = productData.availabilityEstimate;
		gtinContainer.jsonData = productData.gtin;
		mpnContainer.jsonData = productData.manufacturerPartNumber;
		skuContainer.jsonData = productData.sku;

		[
			availabilityEstimateContainer,
			gtinContainer,
			mpnContainer,
			skuContainer,
		].forEach(fillField);

		stockQuantityContainer.innerHTML = productData.stockQuantity
			? productData.stockQuantity + Liferay.Language.get('in-stock')
			: '';

		document.querySelector(
			'[data-text-cp-instance-subscription-info]'
		).innerHTML = productData.subscriptionInfo || '';
		document.querySelector(
			'[data-text-cp-instance-delivery-subscription-info]'
		).innerHTML = productData.deliverySubscriptionInfo || '';
	}

	function updateView(productsData) {
		var cpInstance = productsData.cpInstance;
		var formFields = productsData.formFields;

		updateGallery(formFields);
		updateProductFields(cpInstance);
	}

	Liferay.componentReady('ProductOptions' + cpDefinitionId).then(
		(DDMFormInstance) => {
			if (DDMFormInstance) {
				var FormHandler = DDMFormHandler.default;

				var FormHandlerConfiguration = {
					actionURL: '<%= checkCPInstanceURL %>',
					cpDefinitionId: '<%= cpDefinitionId %>',
					DDMFormInstance: DDMFormInstance,
					portletId: CP_CONTENT_WEB_PORTLET_KEY,
				};

				new FormHandler(FormHandlerConfiguration);

				Liferay.on(eventsDefinitions.CP_INSTANCE_CHANGED, updateView);
			}
		}
	);
</aui:script>