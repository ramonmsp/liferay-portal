@component-name = "portal-commerce"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Commerce";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.openURL();

			CommerceConfiguration.commerceAdminTearDown();

			CommerceConfiguration.commerceInitializersTearDown();

			User.logoutPG();
		}
	}

	test CreateAnOption {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "CPCommerceOptions#CreateAnOption";

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Options");

		CPCommerceCatalog.newOptionsEntry(
			optionDescription = "Option Description",
			optionFieldType = "Text",
			optionName = "Color");

		Button.clickSave();

		AssertElementPresent(locator1 = "Message#SUCCESS");

		CommerceEntry.viewOptionsEntry(
			optionDescription = "Option Description",
			optionName = "Color");
	}

}